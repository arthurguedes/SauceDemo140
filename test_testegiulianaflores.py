# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestegiulianaflores():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.implicitly_wait(2)
    self.driver.maximize_window()
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testegiulianaflores(self):
    # Test name: Teste_giuliana_flores
    # 1 | open | / | 
    self.driver.get("https://www.giulianaflores.com.br/")
    # 2 | click | linkText=Entre ou cadastre-se | 
    self.driver.find_element(By.LINK_TEXT, "Entre ou cadastre-se").click()
    # 3 | click | id=btnIntentNewCustomer | 
    self.driver.find_element(By.ID, "btnIntentNewCustomer").click()
    # 4 | click | id=btnNewCustomer | 
    self.driver.find_element(By.ID, "btnNewCustomer").click()
    # 5 | type | id=dsName | Bernardo Otavio Iago Ribeiro 
    self.driver.find_element(By.ID, "dsName").send_keys("Bernardo Otavio Iago Ribeiro ")
    # 6 | type | id=dsCPF | 693.032.710-76
    self.driver.find_element(By.ID, "dsCPF").send_keys("693.032.710-76")
    # 14 | type | id=dsEmail | bernardo_otavio_ribeiro@hersa.com.br
    self.driver.find_element(By.ID, "dsEmail").send_keys("bernardo_otavio_ribeiro@hersa.com.br")
    # 19 | type | id=dsPassword | 123456789abcd
    self.driver.find_element(By.ID, "dsPassword").send_keys("123456789abcd")
    # 21 | type | id=dsPhone | (27) 98343-9176
    self.driver.find_element(By.ID, "dsPhone").send_keys("(27) 98343-9176")
    # 23 | type | id=dsZip | 29940-766
    self.driver.find_element(By.ID, "dsZip").send_keys("29940-766")
    # 25 | type | id=dsNumber | 11
    self.driver.find_element(By.ID, "dsNumber").send_keys("11")
    # 27 | type | id=dsComplement | 11
    self.driver.find_element(By.ID, "dsComplement").send_keys("11")
    # 28 | click | id=btnCreateCustomer | 
    self.driver.find_element(By.ID, "btnCreateCustomer").click()
    # 29 | assertText | linkText=Olá, Bernardo! | Olá, Bernardo!
    assert self.driver.find_element(By.LINK_TEXT, "Olá, Bernardo!").text == "Olá, Bernardo!"
    # 30 | click | linkText=Olá, Bernardo! | 
    self.driver.find_element(By.LINK_TEXT, "Olá, Bernardo!").click()
    # 31 | click | linkText=Sair | 
    self.driver.find_element(By.LINK_TEXT, "Sair").click()
    # 32 | click | linkText=Entre ou cadastre-se | 
    self.driver.find_element(By.LINK_TEXT, "Entre ou cadastre-se").click()
    # 33 | type | id=User | bernardo_otavio_ribeiro@hersa.com.br
    self.driver.find_element(By.ID, "User").send_keys("bernardo_otavio_ribeiro@hersa.com.br")
    # 34 | type | id=dsPassword | 123456789abcd
    self.driver.find_element(By.ID, "dsPassword").send_keys("123456789abcd")
    # 35 | click | id=User | 
    self.driver.find_element(By.ID, "User").click()
    # 36 | click | id=dsPassword | 
    self.driver.find_element(By.ID, "dsPassword").click()
    # 37 | click | id=dsPassword | 
    self.driver.find_element(By.ID, "dsPassword").click()
    # 38 | type | id=dsPassword | 12345678abcd
    self.driver.find_element(By.ID, "dsPassword").send_keys("12345678abcd")
    # 39 | click | id=btnContinue | 
    self.driver.find_element(By.ID, "btnContinue").click()
    # 40 | type | id=dsPassword | 123456789abcd
    self.driver.find_element(By.ID, "dsPassword").send_keys("123456789abcd")
    # 41 | assertText | css=li | E-mail ou senha inválidos!
    assert self.driver.find_element(By.CSS_SELECTOR, "li").text == "E-mail ou senha inválidos!"
    self.driver.find_element(By.ID, "btnContinue").click()
    # 56 | type | id=dsPassword | 123456789abcd
    self.driver.find_element(By.ID, "dsPassword").send_keys("12345678abcde")
    self.driver.find_element(By.ID, "btnContinue").click()
    # 75 | assertText | linkText=Olá, Bernardo! | Olá, Bernardo!
    assert self.driver.find_element(By.LINK_TEXT, "Olá, Bernardo!").text == "Olá, Bernardo!"
    # 76 | click | css=.header__menulogo > img | 
    self.driver.find_element(By.CSS_SELECTOR, ".header__menulogo > img").click()
    # 77 | click | css=.swiper-slide-next .back | 
    self.driver.find_element(By.CSS_SELECTOR, ".swiper-slide-next .back").click()
    # 78 | click | css=.modal-header > .btn-close | 
    self.driver.find_element(By.CSS_SELECTOR, ".modal-header > .btn-close").click()
    # 79 | click | xpath=//img[@alt='Vaso na Primeira Entrega'] | 
    self.driver.find_element(By.XPATH, "//img[@alt=\'Vaso na Primeira Entrega\']").click()
    # 80 | click | linkText=Olá, Bernardo! | 
    self.driver.find_element(By.LINK_TEXT, "Olá, Bernardo!").click()
    # 81 | click | linkText=Sair | 
    self.driver.find_element(By.LINK_TEXT, "Sair").click()
    # 82 | close |  | 
    self.driver.close()
  
